{
	"cells": [
		{
			"id": 16,
			"tex": "{\\tt MPW\\_Send()}",
			"content": [
				"MPW",
				"Send()"
			],
			"start_row": 8,
			"end_row": 8,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 1,
			"tex": "functionality",
			"content": [
				"functionality"
			],
			"start_row": 0,
			"end_row": 0,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 10,
			"tex": "{\\tt MPW\\_Finalize()}",
			"content": [
				"MPW",
				"Finalize()"
			],
			"start_row": 5,
			"end_row": 5,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 4,
			"tex": "{\\tt MPW\\_Cycle()}",
			"content": [
				"MPW",
				"Cycle()"
			],
			"start_row": 2,
			"end_row": 2,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 3,
			"tex": "Synchronize between two ends of the network.",
			"content": [
				"Synchronize",
				"between",
				"two",
				"ends",
				"of",
				"the",
				"network."
			],
			"start_row": 1,
			"end_row": 1,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 18,
			"tex": "{\\tt MPW\\_SendRecv()}",
			"content": [
				"MPW",
				"SendRecv()"
			],
			"start_row": 9,
			"end_row": 9,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 12,
			"tex": "{\\tt MPW\\_Recv()}",
			"content": [
				"MPW",
				"Recv()"
			],
			"start_row": 6,
			"end_row": 6,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 15,
			"tex": "Forward all traffic between two channels.",
			"content": [
				"Forward",
				"all",
				"tra\ufb03c",
				"between",
				"two",
				"channels."
			],
			"start_row": 7,
			"end_row": 7,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 19,
			"tex": "Send/receive a single buffer.",
			"content": [
				"Send/receive",
				"a",
				"single",
				"bu\ufb00er."
			],
			"start_row": 9,
			"end_row": 9,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 8,
			"tex": "{\\tt MPW\\_Init()}",
			"content": [
				"MPW",
				"Init()"
			],
			"start_row": 4,
			"end_row": 4,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 7,
			"tex": "Send/receive buffers of unknown size using caching.",
			"content": [
				"Send/receive",
				"bu\ufb00ers",
				"of",
				"unknown",
				"size",
				"using",
				"caching."
			],
			"start_row": 3,
			"end_row": 3,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 9,
			"tex": "Set up channels and initialize MPWide.",
			"content": [
				"Set",
				"up",
				"channels",
				"and",
				"initialize",
				"MPWide."
			],
			"start_row": 4,
			"end_row": 4,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 5,
			"tex": "Send buffer over one set of channels, receive from other.",
			"content": [
				"Send",
				"bu\ufb00er",
				"over",
				"one",
				"set",
				"of",
				"channels,",
				"receive",
				"from",
				"other."
			],
			"start_row": 2,
			"end_row": 2,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 17,
			"tex": "Send a single buffer (splitted evenly over the channels).",
			"content": [
				"Send",
				"a",
				"single",
				"bu\ufb00er",
				"(splitted",
				"evenly",
				"over",
				"the",
				"channels)."
			],
			"start_row": 8,
			"end_row": 8,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 14,
			"tex": "{\\tt MPW\\_Relay()}",
			"content": [
				"MPW",
				"Relay()"
			],
			"start_row": 7,
			"end_row": 7,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 6,
			"tex": "{\\tt MPW\\_DSendRecv()}",
			"content": [
				"MPW",
				"DSendRecv()"
			],
			"start_row": 3,
			"end_row": 3,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 2,
			"tex": "{\\tt MPW\\_Barrier()}",
			"content": [
				"MPW",
				"Barrier()"
			],
			"start_row": 1,
			"end_row": 1,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 13,
			"tex": "Receive a single buffer (merging the incoming data).",
			"content": [
				"Receive",
				"a",
				"single",
				"bu\ufb00er",
				"(merging",
				"the",
				"incoming",
				"data)."
			],
			"start_row": 6,
			"end_row": 6,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 11,
			"tex": "Close channels and delete MPWide buffers.",
			"content": [
				"Close",
				"channels",
				"and",
				"delete",
				"MPWide",
				"bu\ufb00ers."
			],
			"start_row": 5,
			"end_row": 5,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 0,
			"tex": "command name",
			"content": [
				"command",
				"name"
			],
			"start_row": 0,
			"end_row": 0,
			"start_col": 0,
			"end_col": 0
		}
	]
}