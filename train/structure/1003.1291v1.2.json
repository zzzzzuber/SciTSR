{
	"cells": [
		{
			"id": 46,
			"tex": "oct",
			"content": [
				"oct"
			],
			"start_row": 23,
			"end_row": 23,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 5,
			"tex": "",
			"content": [],
			"start_row": 2,
			"end_row": 2,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 26,
			"tex": "sqrt",
			"content": [
				"sqrt"
			],
			"start_row": 13,
			"end_row": 13,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 0,
			"tex": "\\textrm{Key=Value}",
			"content": [
				"Key=Value"
			],
			"start_row": 0,
			"end_row": 0,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 51,
			"tex": "{\\rm flip a string or a list}",
			"content": [
				"\ufb02ip",
				"a",
				"string",
				"or",
				"a",
				"list"
			],
			"start_row": 25,
			"end_row": 25,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 25,
			"tex": "{\\rm return the sine of a number}",
			"content": [
				"return",
				"the",
				"sine",
				"of",
				"a",
				"number"
			],
			"start_row": 12,
			"end_row": 12,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 43,
			"tex": "{\\rm return a string with just the next letter in lower case}",
			"content": [
				"return",
				"a",
				"string",
				"with",
				"just",
				"the",
				"next",
				"letter",
				"in",
				"lower",
				"case"
			],
			"start_row": 21,
			"end_row": 21,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 12,
			"tex": "exp",
			"content": [
				"exp"
			],
			"start_row": 6,
			"end_row": 6,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 13,
			"tex": "{\\rm raise to a power}",
			"content": [
				"raise",
				"to",
				"a",
				"power"
			],
			"start_row": 6,
			"end_row": 6,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 18,
			"tex": "log",
			"content": [
				"log"
			],
			"start_row": 9,
			"end_row": 9,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 41,
			"tex": "{\\rm return lower-case version of a string}",
			"content": [
				"return",
				"lower-case",
				"version",
				"of",
				"a",
				"string"
			],
			"start_row": 20,
			"end_row": 20,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 2,
			"tex": "SKIP=$r_{i,j}$",
			"content": [
				"SKIP=ri,j"
			],
			"start_row": 1,
			"end_row": 1,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 31,
			"tex": "{\\rm remove a trailing record separator from a string}",
			"content": [
				"remove",
				"a",
				"trailing",
				"record",
				"separator",
				"from",
				"a",
				"string"
			],
			"start_row": 15,
			"end_row": 15,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 14,
			"tex": "hex",
			"content": [
				"hex"
			],
			"start_row": 7,
			"end_row": 7,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 4,
			"tex": "FUNCTION=$f_i=$",
			"content": [
				"FUNCTION=fi",
				"="
			],
			"start_row": 2,
			"end_row": 2,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 24,
			"tex": "sin",
			"content": [
				"sin"
			],
			"start_row": 12,
			"end_row": 12,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 1,
			"tex": "\\textrm{Description}",
			"content": [
				"Description"
			],
			"start_row": 0,
			"end_row": 0,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 6,
			"tex": "abs",
			"content": [
				"abs"
			],
			"start_row": 3,
			"end_row": 3,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 32,
			"tex": "chop",
			"content": [
				"chop"
			],
			"start_row": 16,
			"end_row": 16,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 47,
			"tex": "{\\rm convert a string to an octal number}",
			"content": [
				"convert",
				"a",
				"string",
				"to",
				"an",
				"octal",
				"number"
			],
			"start_row": 23,
			"end_row": 23,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 49,
			"tex": "{\\rm find a character's numeric representation}",
			"content": [
				"\ufb01nd",
				"a",
				"character\u2019s",
				"numeric",
				"representation"
			],
			"start_row": 24,
			"end_row": 24,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 35,
			"tex": "{\\rm get character this number represents}",
			"content": [
				"get",
				"character",
				"this",
				"number",
				"represents"
			],
			"start_row": 17,
			"end_row": 17,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 8,
			"tex": "atan2",
			"content": [
				"atan2"
			],
			"start_row": 4,
			"end_row": 4,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 9,
			"tex": "{\\rm arctangent in the range -$\\pi$ to $\\pi$}",
			"content": [
				"arctangent",
				"in",
				"the",
				"range",
				"-\u03c0",
				"to",
				"\u03c0"
			],
			"start_row": 4,
			"end_row": 4,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 30,
			"tex": "chomp",
			"content": [
				"chomp"
			],
			"start_row": 15,
			"end_row": 15,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 37,
			"tex": "{\\rm one-way passwd-style encryption}",
			"content": [
				"one-way",
				"passwd-style",
				"encryption"
			],
			"start_row": 18,
			"end_row": 18,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 55,
			"tex": "{\\rm return a string with just the next letter in upper case}",
			"content": [
				"return",
				"a",
				"string",
				"with",
				"just",
				"the",
				"next",
				"letter",
				"in",
				"upper",
				"case"
			],
			"start_row": 27,
			"end_row": 27,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 3,
			"tex": "",
			"content": [],
			"start_row": 1,
			"end_row": 1,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 39,
			"tex": "{\\rm convert a string to a hexadecimal number}",
			"content": [
				"convert",
				"a",
				"string",
				"to",
				"a",
				"hexadecimal",
				"number"
			],
			"start_row": 19,
			"end_row": 19,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 36,
			"tex": "crypt",
			"content": [
				"crypt"
			],
			"start_row": 18,
			"end_row": 18,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 19,
			"tex": "{\\rm retrieve the natural logarithm for a number}",
			"content": [
				"retrieve",
				"the",
				"natural",
				"logarithm",
				"for",
				"a",
				"number"
			],
			"start_row": 9,
			"end_row": 9,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 40,
			"tex": "lc",
			"content": [
				"lc"
			],
			"start_row": 20,
			"end_row": 20,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 28,
			"tex": "srand",
			"content": [
				"srand"
			],
			"start_row": 14,
			"end_row": 14,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 50,
			"tex": "reverse",
			"content": [
				"reverse"
			],
			"start_row": 25,
			"end_row": 25,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 11,
			"tex": "{\\rm cosine function}",
			"content": [
				"cosine",
				"function"
			],
			"start_row": 5,
			"end_row": 5,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 29,
			"tex": "{\\rm seed the random number generator}",
			"content": [
				"seed",
				"the",
				"random",
				"number",
				"generator"
			],
			"start_row": 14,
			"end_row": 14,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 54,
			"tex": "ucfirst",
			"content": [
				"uc\ufb01rst"
			],
			"start_row": 27,
			"end_row": 27,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 21,
			"tex": "{\\rm convert a string to an octal number}",
			"content": [
				"convert",
				"a",
				"string",
				"to",
				"an",
				"octal",
				"number"
			],
			"start_row": 10,
			"end_row": 10,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 7,
			"tex": "{\\rm absolute value function}",
			"content": [
				"absolute",
				"value",
				"function"
			],
			"start_row": 3,
			"end_row": 3,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 44,
			"tex": "length",
			"content": [
				"length"
			],
			"start_row": 22,
			"end_row": 22,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 27,
			"tex": "{\\rm square root function}",
			"content": [
				"square",
				"root",
				"function"
			],
			"start_row": 13,
			"end_row": 13,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 23,
			"tex": "{\\rm retrieve the next pseudo-random number}",
			"content": [
				"retrieve",
				"the",
				"next",
				"pseudo-random",
				"number"
			],
			"start_row": 11,
			"end_row": 11,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 53,
			"tex": "{\\rm return upper-case version of a string}",
			"content": [
				"return",
				"upper-case",
				"version",
				"of",
				"a",
				"string"
			],
			"start_row": 26,
			"end_row": 26,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 33,
			"tex": "{\\rm remove the last character from a string}",
			"content": [
				"remove",
				"the",
				"last",
				"character",
				"from",
				"a",
				"string"
			],
			"start_row": 16,
			"end_row": 16,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 20,
			"tex": "oct",
			"content": [
				"oct"
			],
			"start_row": 10,
			"end_row": 10,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 38,
			"tex": "hex",
			"content": [
				"hex"
			],
			"start_row": 19,
			"end_row": 19,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 52,
			"tex": "uc",
			"content": [
				"uc"
			],
			"start_row": 26,
			"end_row": 26,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 17,
			"tex": "{\\rm get the integer portion of a number}",
			"content": [
				"get",
				"the",
				"integer",
				"portion",
				"of",
				"a",
				"number"
			],
			"start_row": 8,
			"end_row": 8,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 22,
			"tex": "rand",
			"content": [
				"rand"
			],
			"start_row": 11,
			"end_row": 11,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 16,
			"tex": "int",
			"content": [
				"int"
			],
			"start_row": 8,
			"end_row": 8,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 45,
			"tex": "{\\rm return the number of bytes in a string}",
			"content": [
				"return",
				"the",
				"number",
				"of",
				"bytes",
				"in",
				"a",
				"string"
			],
			"start_row": 22,
			"end_row": 22,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 48,
			"tex": "ord",
			"content": [
				"ord"
			],
			"start_row": 24,
			"end_row": 24,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 15,
			"tex": "{\\rm convert a string to a hexadecimal number}",
			"content": [
				"convert",
				"a",
				"string",
				"to",
				"a",
				"hexadecimal",
				"number"
			],
			"start_row": 7,
			"end_row": 7,
			"start_col": 1,
			"end_col": 1
		},
		{
			"id": 10,
			"tex": "cos",
			"content": [
				"cos"
			],
			"start_row": 5,
			"end_row": 5,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 34,
			"tex": "chr",
			"content": [
				"chr"
			],
			"start_row": 17,
			"end_row": 17,
			"start_col": 0,
			"end_col": 0
		},
		{
			"id": 42,
			"tex": "lcfirst",
			"content": [
				"lc\ufb01rst"
			],
			"start_row": 21,
			"end_row": 21,
			"start_col": 0,
			"end_col": 0
		}
	]
}